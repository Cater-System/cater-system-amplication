/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsJSON,
  IsOptional,
  ValidateNested,
  IsString,
  IsEnum,
} from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { CouponWhereUniqueInput } from "../../coupon/base/CouponWhereUniqueInput";
import { Type } from "class-transformer";
import { DeliveryWhereUniqueInput } from "../../delivery/base/DeliveryWhereUniqueInput";
import { ProductCreateNestedManyWithoutOrdersInput } from "./ProductCreateNestedManyWithoutOrdersInput";
import { EnumOrderStatus } from "./EnumOrderStatus";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
@InputType()
class OrderCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  address?: InputJsonValue;

  @ApiProperty({
    required: true,
    type: () => CouponWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CouponWhereUniqueInput)
  @Field(() => CouponWhereUniqueInput)
  coupon!: CouponWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: () => DeliveryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DeliveryWhereUniqueInput)
  @Field(() => DeliveryWhereUniqueInput)
  delivery!: DeliveryWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  orderNumber!: string;

  @ApiProperty({
    required: true,
    type: () => ProductCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => ProductCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => ProductCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  products?: ProductCreateNestedManyWithoutOrdersInput;

  @ApiProperty({
    required: true,
    enum: EnumOrderStatus,
  })
  @IsEnum(EnumOrderStatus)
  @Field(() => EnumOrderStatus)
  status!: "Pending" | "InProgress" | "Completed";

  @ApiProperty({
    required: true,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @Field(() => UserWhereUniqueInput)
  user!: UserWhereUniqueInput;
}
export { OrderCreateInput };
