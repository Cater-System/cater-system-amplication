/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsJSON,
  IsOptional,
  ValidateNested,
  IsString,
  IsEnum,
} from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { CouponWhereUniqueInput } from "../../coupon/base/CouponWhereUniqueInput";
import { Type } from "class-transformer";
import { DeliveryWhereUniqueInput } from "../../delivery/base/DeliveryWhereUniqueInput";
import { ProductUpdateManyWithoutOrdersInput } from "./ProductUpdateManyWithoutOrdersInput";
import { EnumOrderStatus } from "./EnumOrderStatus";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
@InputType()
class OrderUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  address?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => CouponWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CouponWhereUniqueInput)
  @IsOptional()
  @Field(() => CouponWhereUniqueInput, {
    nullable: true,
  })
  coupon?: CouponWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => DeliveryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DeliveryWhereUniqueInput)
  @IsOptional()
  @Field(() => DeliveryWhereUniqueInput, {
    nullable: true,
  })
  delivery?: DeliveryWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  orderNumber?: string;

  @ApiProperty({
    required: false,
    type: () => ProductUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => ProductUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => ProductUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  products?: ProductUpdateManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    enum: EnumOrderStatus,
  })
  @IsEnum(EnumOrderStatus)
  @IsOptional()
  @Field(() => EnumOrderStatus, {
    nullable: true,
  })
  status?: "Pending" | "InProgress" | "Completed";

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}
export { OrderUpdateInput };
