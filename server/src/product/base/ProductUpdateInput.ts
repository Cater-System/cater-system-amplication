/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ProductAttributeUpdateManyWithoutProductsInput } from "./ProductAttributeUpdateManyWithoutProductsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { BrandWhereUniqueInput } from "../../brand/base/BrandWhereUniqueInput";
import { CategoryUpdateManyWithoutProductsInput } from "./CategoryUpdateManyWithoutProductsInput";
import { OrderWhereUniqueInput } from "../../order/base/OrderWhereUniqueInput";
@InputType()
class ProductUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ProductAttributeUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ProductAttributeUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ProductAttributeUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  attributes?: ProductAttributeUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => BrandWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BrandWhereUniqueInput)
  @IsOptional()
  @Field(() => BrandWhereUniqueInput, {
    nullable: true,
  })
  brand?: BrandWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CategoryUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => CategoryUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => CategoryUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  categories?: CategoryUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => OrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderWhereUniqueInput, {
    nullable: true,
  })
  order?: OrderWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  sku?: string;
}
export { ProductUpdateInput };
