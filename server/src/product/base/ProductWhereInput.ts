/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ProductAttributeListRelationFilter } from "../../productAttribute/base/ProductAttributeListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { BrandWhereUniqueInput } from "../../brand/base/BrandWhereUniqueInput";
import { CategoryListRelationFilter } from "../../category/base/CategoryListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { OrderWhereUniqueInput } from "../../order/base/OrderWhereUniqueInput";
import { FloatFilter } from "../../util/FloatFilter";
@InputType()
class ProductWhereInput {
  @ApiProperty({
    required: false,
    type: () => ProductAttributeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductAttributeListRelationFilter)
  @IsOptional()
  @Field(() => ProductAttributeListRelationFilter, {
    nullable: true,
  })
  attributes?: ProductAttributeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => BrandWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BrandWhereUniqueInput)
  @IsOptional()
  @Field(() => BrandWhereUniqueInput, {
    nullable: true,
  })
  brand?: BrandWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CategoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CategoryListRelationFilter)
  @IsOptional()
  @Field(() => CategoryListRelationFilter, {
    nullable: true,
  })
  categories?: CategoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => OrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderWhereUniqueInput, {
    nullable: true,
  })
  order?: OrderWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: FloatFilter,
  })
  @Type(() => FloatFilter)
  @IsOptional()
  @Field(() => FloatFilter, {
    nullable: true,
  })
  price?: FloatFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  sku?: StringFilter;
}
export { ProductWhereInput };
